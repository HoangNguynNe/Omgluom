const { EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder, ComponentType } = require("discord.js");
const config = require('../../assets/json/config.json');

module.exports = { 
    name: "help",
  description: "Ghi l·∫°i tin nh·∫Øn ƒë√£ b·ªã xo√°",
  cooldown: 5,
  aliases: ["hp"],
  category: "üî∞ Th√¥ng Tin",
  usage: "<PREFIX>help",
run: async (client, message, args) => {
  const embed = new EmbedBuilder()
    .setTitle(`<a:ICE_ghim:914107547403821086> B·∫£ng h·ªó tr·ª£ bot ${client.user.username} <a:ICE_timlaplanh:914107571206500382>`)
    .setColor('#2F3136')
    .setDescription('**<a:ICE_muiten:1021012134274011166> H√£y click v√†o √¥ ph√≠a d∆∞·ªõi ƒë·ªÉ ch·ªçn nh√© <:ICE_traitym:1011615064618442873>** \nBot c√≤n m·ªõi n√™n n·∫øu l·ªói g√¨ hay b·∫°n mu·ªën n√¢ng c·∫•p g√¨ h√£y chat **igopy + N·ªôi dung** ƒë·ªÉ ch√∫ng t·ªõ kh·∫Øc ph·ª•c l·∫°i nh√©')
    .addFields({ name: `ICE Z FAMILY:`, value: `- [Discord ICE](https://discord.gg/xZDCwKwVvD)`, inline: true })
    .setTimestamp()
    .setFooter({
      text: `ƒê∆∞·ª£c y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const giveaway = new EmbedBuilder()
    .setTitle("<a:ICE_giveaway3:1021038376771661947> Giveaway <a:ICE_giveaway3:1021038376771661947>")
    .setColor('#2F3136')
    .setDescription("```yaml\n**Giveaway** s·∫Ω c√≥ nh·ªØng l·ªánh sau:```")
    .addFields(
      { name: 'Start', value: `B·∫Øt ƒë·∫ßu giveaway - T·ª± ƒë·ªông dms v·ªÅ ng∆∞·ªùi d√πng khi h·ªç trung giveaway`, inline: true },
      { name: 'Edit', value: `Ch·ªânh s·ª≠a giveaway!`, inline: true },
      { name: 'End', value: `K·∫øt th√∫c giveaway!`, inline: true },
      { name: 'List', value: `Danh s√°ch giveaway trong server!`, inline: true },
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const general = new EmbedBuilder()
    .setTitle("<a:ICE_I:932534459318804540> <a:ICE_C:935096345834975232> <a:ICE_E:935179871271944273> ")
    .setColor('#2F3136')
    .setDescription("```yaml\nC√°c l·ªánh ƒëang kh·∫£ d·ª•ng:```")
    .addFields(
      { name: 'Help', value: `Hi·ªÉn th·ªã t·∫•t c·∫£ c√°c l·ªánh c·ªßa bot!`, inline: true },
      { name: 'avatar', value: `Xem avatar c·ªßa b·∫°n ho·∫∑c aido!`, inline: true },
      { name: 'math', value: `Kh√¥ng bi·∫øt t√≠nh ? H√£y ƒë·ªÉ ICE Home!`, inline: true },
      { name: 'snipe', value: `Xem l·∫°i tin nh·∫Øn m√† ai ƒë√≥ v·ª´a x√≥a!`, inline: true },
      { name: 'emoji', value: `Th√™m emoji v√†o server [iemoji + emoji + t√™n]!`, inline: true },
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

    const image = new EmbedBuilder()
      .setTitle("<a:ICE_hopnhan1:1130026575950262362> Image<a:ICE_hopnhan2:1130026689087418378>")
      .setColor('#2F3136')
      .setDescription("```yaml\nImage s·∫Ω c√≥ nh·ªØng l·ªánh sau:```")
      .addFields(
        { name: 'kill', value: `Gi·∫øt ch·∫øt ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'baka', value: `G·ªçi ai ƒë√≥ l√† ƒë·ªì ng·ªëc!`, inline: true },
        { name: 'blush', value: `ƒê·ªè m·∫∑t!`, inline: true },
        { name: 'cuddle', value: `√îm ·∫•p ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'bite', value: `C·∫Øn ng∆∞·ªùi kh√°c ho·∫∑c t·ª± c·∫Øn!`, inline: true },
        { name: 'dance', value: `Nh·∫£y m√∫a!`, inline: true },
        { name: 'slap', value: `T√°t ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'bonk', value: `ƒê·∫≠p ƒë·∫ßu ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'bully', value: `B·∫Øt n·∫°t ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'hug', value: `√îm ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'kiss', value: `H√¥n ng∆∞·ªùi kh√°c ho·∫∑c t·ª± h√¥n!`, inline: true },
        { name: 'pat', value: `Xoa ƒë·∫ßu ng∆∞·ªùi kh√°c ho·∫∑c t·ª± xoa ƒë·∫ßu!`, inline: true },
        { name: 'wallpaper', value: `T·∫£i m·ªôt h√¨nh n·ªÅn anime ƒë·∫πp!`, inline: true },
        { name: 'happy', value: `Vui v·∫ª!`, inline: true },
        { name: 'wink', value: `Nh√°y m·∫Øt!`, inline: true }
      )
      .setTimestamp()
      .setFooter({
        text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
        iconURL: message.author.displayAvatarURL()
      });
    

  const fun = new EmbedBuilder()
    .setTitle("<a:ICE_anime:1012195201466507274> FUN <a:FD_Apinkstar:1113883638422057101>")
    .setColor('#2F3136')
    .setDescription("```yaml\n**FUN** s·∫Ω c√≥ nh·ªØng l·ªánh sau:```")
    .addFields(
      { name: 'chose', value: `Ch·ªçn 1 c√°i g√¨ ƒë√≥!`, inline: true },
      { name: 'connect4', value: `Tr√≤ connect4!`, inline: true },
      { name: 'daomin', value: `Tr√≤ ƒë√†o m√¨n!`, inline: true },
      { name: 'domoinguoi', value: `ƒê·ªë m·ªçi ng∆∞·ªùi 1 c√¢u g√¨ ƒë√≥!`, inline: true },
      { name: 'dovui', value: `ICE Home ƒë·ªë b·∫°n 1 c√¢u g√¨ ƒë√≥!`, inline: true },
      { name: 'timkiem', value: `T√¨m ki·∫øm 1 b·ª©c h√¨nh g√¨ ƒë√≥ @`, inline: true },
      { name: 'tictactoe', value: `Ch∆°i X O!`, inline: true },
      { name: 'type', value: `C√πng nhau xem ai l√† ng∆∞·ªùi g√µ nhanh nh·∫•t!`, inline: true },
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const image2 = new EmbedBuilder()
    .setTitle("<a:ICE_Banking:1130351488070324364> Image 2 <a:ICE_Cash:1130351669679493222>")
    .setColor('#2F3136')
    .setDescription("```yaml\nImage 2 s·∫Ω c√≥ nh·ªØng l·ªánh sau:```")
    .addFields(
        { name: 'highfive', value: `ƒê·∫≠p tay v·ªõi ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'wave', value: `V·∫´y tay!`, inline: true },
        { name: 'cry', value: `Kh√≥c!`, inline: true },
        { name: 'smile', value: `C∆∞·ªùi!`, inline: true },
        { name: 'punch', value: `ƒê·∫•m ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'kick', value: `ƒê√° ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'poke', value: `Ch·ªçc ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'goodnight', value: `Ch√∫c ng·ªß ngon!`, inline: true },
        { name: 'confused', value: `B·ªëi r·ªëi!`, inline: true },
        { name: 'sad', value: `Bu·ªìn!`, inline: true },
        { name: 'thinking', value: `ƒêang suy nghƒ©!`, inline: true },
        { name: 'yes', value: `ƒê·ªìng √Ω!`, inline: true },
        { name: 'yeet', value: `N√©m ng∆∞·ªùi kh√°c!`, inline: true },
        { name: 'stare', value: `Nh√¨n ch·∫±m ch·∫±m!`, inline: true },
        { name: 'bored', value: `Ch√°n n·∫£n!`, inline: true },
        { name: 'scream', value: `H√©t l√™n!`, inline: true },
        { name: 'nervous', value: `Lo l·∫Øng!`, inline: true }
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const res = new EmbedBuilder()
    .setTitle("<a:ICE_tim2:1127852363231793215> Auto responder <a:ICE_bugcat:930002134643122238>")
    .setColor('#2F3136')
    .setDescription("```yaml\n**CH·ªà STAFF M·ªöI D√ôNG ƒê∆Ø·ª¢C**```")
    .addFields(
      { name: 'ares', value: `Th√™m 1 responder [iares [t·ª´] ph·∫£n h·ªìi]!`, inline: true },
      { name: 'eres', value: `S·ª≠a 1 responder!`, inline: true },
      { name: 'listres', value: `Danh s√°ch c√°c responder!`, inline: true },
      { name: 'rmres', value: `X√≥a 1 responder!`, inline: true },
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const donate = new EmbedBuilder()
    .setTitle("<a:ICE_muiten:1021012134274011166> Donate <a:ICE_muiten:1021012134274011166>")
    .setColor('#2F3136')
    .setDescription("```yaml\n**Donate** s·∫Ω c√≥ nh·ªØng l·ªánh sau:```")
    .addFields(
      { name: 'idn', value: `Xem th√¥ng tin donate c·ªßa b·∫£n th√¢n!`, inline: true },
      { name: 'tdn', value: `Xem top donate server!`, inline: true },
    )
    .setTimestamp()
    .setFooter({
      text: `Y√™u c·∫ßu b·ªüi ${message.author.username} | ` + config.copyright,
      iconURL: message.author.displayAvatarURL()
    });

  const select = new ActionRowBuilder().addComponents(
    new StringSelectMenuBuilder()
      .setCustomId("help")
      .setPlaceholder("Click ƒë·ªÉ ch·ªçn trang mu·ªën xem nh√©!")
      .addOptions([
        {
          label: "Giveaway",
          description: "Xem c√°c l·ªánh v·ªÅ giveaway",
          value: "giveaway",
          emoji: "<a:ICE_giveaway3:1021038376771661947>",
        },
        {
          label: "General",
          description: "Xem c√°c l·ªánh th√¥ng th∆∞·ªùng",
          value: "general",
          emoji: "<a:ICE_I:932534459318804540>",
        },
        {
          label: "Image",
          description: "Xem c√°c l·ªánh v·ªÅ image",
          value: "image",
          emoji: "<a:ICE_echlilpepe:1012195325886345216>",
        },
        {
          label: "Fun",
          description: "Xem c√°c l·ªánh v·ªÅ fun",
          value: "fun",
          emoji: "<a:ICE_anime:1012195201466507274>",
        },
        {
          label: "image 2",
          description: "Xem th√™m c√°c l·ªánh v·ªÅ image",
          value: "image2",
          emoji: "<a:ICE_meocatnhay:1132868076786946099>",
        },
        {
          label: "Responder",
          description: "Xem c√°c l·ªánh v·ªÅ responder",
          value: "res",
          emoji: "<a:ICE_tim2:1127852363231793215>",
        },
        {
          label: "Donate",
          description: "Xem c√°c l·ªánh v·ªÅ donate",
          value: "donate",
          emoji: "<a:ICE_muiten:1021012134274011166>",
        },
      ])
  );

  const initialMessage = await message.channel.send({
    embeds: [embed],
    components: [select],
  });

  const filter = (interaction) => interaction.customId === "help" && interaction.user.id === message.author.id;
  const collector = initialMessage.createMessageComponentCollector({
    filter,
    componentType: ComponentType.StringSelect,
    time: 60000,
  });

  collector.on("collect", async (collected) => {
    let value = collected.values[0];
    let embeds = [embed];

    if (value === "giveaway") embeds = [giveaway];
    else if (value === "general") embeds = [general];
    else if (value === "image") embeds = [image];
    else if (value === "fun") embeds = [fun];
    else if (value === "image2") embeds = [image2];
    else if (value === "res") embeds = [res];
    else if (value === "donate") embeds = [donate];

    await collected.update({ embeds, components: [select] });
  });

  collector.on("end", () => {
    select.components[0].setDisabled(true);
    initialMessage.edit({ components: [select] });
  });
}

}
